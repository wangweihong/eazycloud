# This creates the stages in which the jobs will run. By default all
# jobs will run in parallel in the stage. Once the jobs are completed
# successfully then you move on to the next stage. The way jobs run
# is completely configurable.
stages:
  - debug
  - build
  - test



# With the include statement, you can quickly add jobs which have
# been pre-defined in external YAMLs. The SAST job I included below
# is provided and maintained by GitLab and adds Static Application
# Security Testing (SAST) to your pipeline.
# only support in test stage
# check https://docs.gitlab.com/ee/user/application_security/sast/
include:
  - template: Jobs/SAST.gitlab-ci.yml

print-all-env-vars-job:
  stage: debug
  script:
    - echo "GitLab CI/CD | Print all environment variables"
    - env

build_job:
  stage: build
  script:
    - echo "$PATH"

"build and test":
  stage: build
  # variables:
  #   GOPROXY: "https://goproxy.cn"
  #   GOBIN: "$GOPATH/bin"
  #   PATH: "$PATH:$GOBIN"
  before_script:
    - echo "make use make has installed" && make --version || exit 1
    - echo "make use go has installed"  && go version || exit 1
    - export PATH=$PATH:$GOBIN
  script:
    - make tidy
    - make gen
    - make lint
    - make cover
    - make build
    - make configs


